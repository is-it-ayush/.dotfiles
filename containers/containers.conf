[containers]

# features available on all containers.
default_capabilities = [
  "CHOWN",
  "DAC_OVERRIDE",
  "FOWNER",
  "FSETID",
  "KILL",
  "NET_BIND_SERVICE",
  "SETFCAP",
  "SETGID",
  "SETPCAP",
  "SETUID",
  "SYS_CHROOT"
]
# kernal parameters for all containers.
default_sysctls = [
  "net.ipv4.ping_group_range=0 0", # ping sockets (icmp); value=gid; value_format=min max
]
# process limit for all containers.
default_ulimits = [
  "nofile=1280:2560", # file descriptors (total)
]


# default env vars for all containers.
env = [
  "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
  "TERM=xterm",
]
# pass host env vars.
env_host = false


# the method used for ipc namespace for a container.
ipcns = "shareable" # 'host': share host ipc ; 'none': sharable ipc without /dev/shm ; 'private': private ipc ; 'shareable': shareable ipc

# create a kernal keyring for a container.
keyring = true

# selinux labelling.
label = true

# log driver.
log_driver = "journald" # 'journald': use systemd journal ; 'k8s-file': json aliased <not yet clear to me> ; 'passthrough': use host ; 'none': don't log
log_size_max = -1 # -1: no limit ; x >= 8192: any value as x

# net namespace
netns = "private" # 'private': a private namespace ; 'host': namespace shared with host ; 'none': containers do not use network.

# pid namespace
pidns = "private" # 'private': a private namespace ; 'host': namespace shared with host

# process limit for a container
pids_limit = 2048 # 0: no process limit ; x: any value as x

# /dev/shm size
shm_size = "65536k" # x: any value as x along with unit y.[y = b (bytes), k (kilobytes), m (megabytes), or g (gigabytes))

# default umask for all containers.
umask = "0022"

# user namespace
userns = "host" # 'auto': create a private namespace ; 'host': share the host namespace

# user ids to allocate
userns_size = 65536 # x: any value as x

# uts namsepace
utsns = "private" # 'private': create a private namepsace ; 'host': share the host namespace


[network]

# default network name.
default_network = "podman"

# default subnet.
default_subnet = "10.69.0.0/24" # cidr notation.


[engine]

# cgroup manager
cgroup_manager = "systemd" # 'systemd' ; 'cgroupfs'

# env vars passed to conman.
conmon_env_vars = [
  "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
]

# key seq. used to detch a container.
detach_keys = "ctrl-p,ctrl-q" # 'ctrl-<x>': any value of x [x = `a-z`, `@`, `^`, `[`, `\`, `]`, `^` or `_`]

# keep the host ports alive & strict that are still in use by a container.
enable_port_reservation = true

# container engine env vars (diff from container env vars).
env = []

# max log size.
events_logfile_max_size = "1m" # any value of x with unit y [y = b (bytes), k (kilobytes), m (megabytes), or g (gigabytes)]

# log drive for container events.
events_logger = "journald"

# transport method for pulling and pushing for images.
image_default_transport = "docker://"

# slirp4netns binary path.
network_cmd_path = "/usr/bin/slirp4netns"

# number of allowed containers at once. each container consumes one lock.
num_locks = 2048

# exit policy of pod if the last continer exits.
pod_exit_policy = "stop" # 'continue': the pod keeps running ; 'stop': the pod stops.

# pull an image before runnning a container.
pull_policy = "missing" # 'always': always pull image ; 'missing': if image is not present, pull ; 'never': do not.

# podman remote mode.
remote = false

# default oci runtime.
runtime = "crun"

# default location for storing temporary image stuff.
image_copy_tmp_dir="/mnt/extras/tools/podman/image/tmp/"

# default location for persistant files.
static_dir = "/mnt/extras/tools/podman/storage/"

# default location for storing temporray files.
tmp_dir = "/mnt/extras/tools/tmp/"

# default location for storing actual image stuff.
volume_path = "/mnt/extras/tools/podman/image/"

[machine]
# no. of cpu's to create a container with.
cpus=1

# initial podman disk size during container creation.
disk_size=5

# amount of memory to create a computer with.
memory=2048
